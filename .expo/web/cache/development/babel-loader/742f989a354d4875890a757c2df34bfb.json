{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { navigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport styles from \"../styles/global\";\nimport { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validation = yup.object({\n  fullName: yup.string().required(\"Enter your name\").matches(/(\\w.+\\s).+/, 'Enter at least 2 names').min(3),\n  email: yup.string().email(\"Please enter valid email\").required(\"Email adress is required\"),\n  password: yup.string().min(8).required(\"Password is required\"),\n  confirmPassword: yup.string().oneOf([yup.ref('password')], 'Passwords do not match').required('Confirm password is required')\n});\nvar Stack = createNativeStackNavigator();\n\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Formik, {\n      initialValues: {\n        fullName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: validation,\n      onSubmit: function onSubmit(values, actions) {\n        actions.resetForm();\n        console.log(values);\n      },\n      children: function children(_ref2) {\n        var handleChange = _ref2.handleChange,\n            handleSubmit = _ref2.handleSubmit,\n            values = _ref2.values,\n            errors = _ref2.errors,\n            isValid = _ref2.isValid;\n        return _jsxs(View, {\n          style: styles.containerSign,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \" Register\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Full name\",\n            placeholderTextColor: '#343a40',\n            onChangeText: handleChange('fullName'),\n            value: values.fullName\n          }), errors.fullName && _jsx(Text, {\n            style: styles.errText,\n            children: errors.fullName\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Email adress\",\n            placeholderTextColor: '#343a40',\n            keyboardType: \"email-address\",\n            onChangeText: handleChange('email'),\n            value: values.email\n          }), errors.email && _jsx(Text, {\n            style: styles.errText,\n            children: errors.email\n          }), _jsx(TextInput, {\n            style: styles.input,\n            secureTextEntry: true,\n            placeholder: \"Password\",\n            placeholderTextColor: '#343a40',\n            onChangeText: handleChange('password'),\n            value: values.password\n          }), errors.password && _jsx(Text, {\n            style: styles.errText,\n            children: errors.password\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Confirm your password\",\n            placeholderTextColor: '#343a40',\n            secureTextEntry: true,\n            onChangeText: handleChange('confirmPassword'),\n            value: values.confirmPassword\n          }), errors.confirmPassword && _jsx(Text, {\n            style: styles.errText,\n            children: errors.confirmPassword\n          }), _jsx(Button, {\n            title: \"Register now\",\n            disabled: !isValid,\n            color: \"#560bad\",\n            onPress: function onPress() {\n              handleSubmit;\n              navigation.navigate('Home');\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.navigate('SignIn');\n            },\n            children: _jsx(Text, {\n              style: styles.text,\n              children: \"Already have an account Sign in \"\n            })\n          })]\n        });\n      }\n    })\n  });\n};\n\nexport default SignUp;","map":{"version":3,"names":["React","navigationContainer","createNativeStackNavigator","styles","Formik","yup","validation","object","fullName","string","required","matches","min","email","password","confirmPassword","oneOf","ref","Stack","SignUp","navigation","container","values","actions","resetForm","console","log","handleChange","handleSubmit","errors","isValid","containerSign","title","input","errText","navigate","text"],"sources":["C:/Users/Safwen/Desktop/SignApp/components/signUp.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    View ,Button, TextInput,Text,\r\n    TouchableOpacity\r\n} from \"react-native\"\r\n\r\nimport { navigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport styles from \"../styles/global\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nconst validation = yup.object({\r\n    fullName:yup.string()\r\n    .required(\"Enter your name\")\r\n    .matches(/(\\w.+\\s).+/, 'Enter at least 2 names')\r\n    .min(3),\r\n    email:yup\r\n    .string()\r\n    .email(\"Please enter valid email\")\r\n    .required(\"Email adress is required\"),\r\n    password:yup\r\n    .string()\r\n    .min(8)\r\n    .required(\"Password is required\"),\r\n    confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password')], 'Passwords do not match')\r\n    .required('Confirm password is required'),\r\n})\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst SignUp=({navigation}) =>{\r\n\r\n    return (\r\n        <View style={styles.container} > \r\n                     \r\n            <Formik\r\n            initialValues={{fullName:'',email :'' , password:'',confirmPassword:''} }\r\n            validationSchema={validation}\r\n            onSubmit={(values,actions) => {\r\n                actions.resetForm()\r\n                console.log(values)\r\n\r\n\r\n\r\n            }}\r\n            >\r\n                {({handleChange,\r\n     handleSubmit,\r\n     values,\r\n     errors,\r\n     isValid,\r\n     \r\n     })=>( \r\n                    <View style={styles.containerSign}>\r\n                       <Text style={styles.title}> Register\r\n                         </Text>  \r\n                        <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Full name' \r\n                        placeholderTextColor={'#343a40'}\r\n                        onChangeText={handleChange('fullName')}\r\n                        value={values.fullName}\r\n                        />\r\n                        {errors.fullName &&\r\n                        <Text style={styles.errText}>{errors.fullName}</Text>\r\n       }\r\n                        <TextInput\r\n                         style={styles.input}\r\n                        placeholder='Email adress' \r\n                        placeholderTextColor={'#343a40'}\r\n                        keyboardType=\"email-address\"\r\n                        onChangeText={handleChange('email')}\r\n                        value={values.email}\r\n                        />\r\n                        {errors.email &&\r\n                        <Text style={styles.errText}>{errors.email}</Text>\r\n                        }\r\n                        <TextInput \r\n                        style={styles.input}\r\n                        secureTextEntry={true}\r\n                        placeholder='Password' \r\n                        placeholderTextColor={'#343a40'}\r\n                        onChangeText={handleChange('password')}\r\n                        value={values.password}\r\n                        />\r\n                        {errors.password &&\r\n                        <Text style={styles.errText}>{errors.password}</Text>\r\n                        }\r\n                        <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Confirm your password' \r\n                        placeholderTextColor={'#343a40'}\r\n                        secureTextEntry={true}\r\n                        onChangeText={handleChange('confirmPassword')}\r\n                        value={values.confirmPassword}\r\n                        />\r\n                        {errors.confirmPassword &&\r\n                        <Text style={styles.errText}>{errors.confirmPassword}</Text>\r\n                        }\r\n                        <Button\r\n                        title=\"Register now\"\r\n                        disabled={!isValid}\r\n                        color='#560bad'\r\n                        onPress={\r\n                            ()=> {handleSubmit\r\n                              navigation.navigate('Home')}}\r\n                        />\r\n                        <TouchableOpacity onPress={()=>{ navigation.navigate('SignIn')}}>\r\n                        <Text style={styles.text}>Already have an account Sign in </Text>\r\n                        </TouchableOpacity>\r\n\r\n                    </View>\r\n                    \r\n                    \r\n                )}\r\n            </Formik>\r\n        </View>\r\n\r\n    )\r\n\r\n} \r\nexport default SignUp;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}