{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { navigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SignOption from \"./customComponent/SignOption\";\nimport CustomButton from \"./customComponent/customButton\";\nimport styles from \"../styles/global\";\nimport { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validation = yup.object({\n  fullName: yup.string().required(\"Enter your name\").matches(/(\\w.+\\s).+/, 'Enter at least 2 names').min(3),\n  email: yup.string().email(\"Please enter valid email\").required(\"Email address is required\"),\n  password: yup.string().min(8).required(\"Password is required\")\n});\nvar Stack = createNativeStackNavigator();\n\nvar SignIn = function SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var ForgetPasswordPress = function ForgetPasswordPress() {\n    navigation.navigate('ForgePasswordScreen');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.viewimg,\n      children: _jsx(Image, {\n        source: require(\"../assets/sign.png\"),\n        style: styles.sign\n      })\n    }), _jsx(Formik, {\n      initialValues: {\n        fullName: '',\n        email: '',\n        password: ''\n      },\n      validationSchema: validation,\n      onSubmit: function onSubmit(values, actions) {\n        actions.resetForm();\n        console.log(values);\n      },\n      children: function children(_ref2) {\n        var handleChange = _ref2.handleChange,\n            handleSubmit = _ref2.handleSubmit,\n            values = _ref2.values,\n            errors = _ref2.errors,\n            isValid = _ref2.isValid,\n            handleBlur = _ref2.handleBlur;\n        return _jsxs(View, {\n          style: styles.containerSign,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"Sign in\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Full name\",\n            placeholderTextColor: '#343a40',\n            onChangeText: handleChange('fullName'),\n            value: values.fullName\n          }), errors.fullName && _jsx(Text, {\n            style: styles.errText,\n            children: errors.fullName\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Email address\",\n            placeholderTextColor: '#343a40',\n            keyboardType: \"email-address\",\n            onChangeText: handleChange('email'),\n            onBlur: handleBlur('email'),\n            value: values.email\n          }), errors.email && _jsx(Text, {\n            style: styles.errText,\n            children: errors.email\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Password\",\n            secureTextEntry: true,\n            placeholderTextColor: '#343a40',\n            onChangeText: handleChange('password'),\n            onBlur: handleBlur('password'),\n            value: values.password\n          }), errors.password && _jsx(Text, {\n            style: styles.errText,\n            children: errors.password\n          }), _jsxs(View, {\n            style: {\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [_jsx(Text, {\n              style: styles.text,\n              onPress: ForgetPasswordPress,\n              children: \"Forget password ?\"\n            }), _jsx(CustomButton, {\n              text: \"Sign Un\",\n              disabled: !isValid,\n              onPress: function onPress() {\n                handleSubmit;\n                navigation.navigate('Home');\n              }\n            })]\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Don't have an account \", _jsx(Text, {\n              style: {\n                color: 'red'\n              },\n              onPress: function onPress() {\n                return navigation.navigate('SignUp');\n              },\n              children: \" Sign up\"\n            }), \" \"]\n          }), _jsx(SignOption, {})]\n        });\n      }\n    })]\n  });\n};\n\nexport default SignIn;","map":{"version":3,"names":["React","navigationContainer","createNativeStackNavigator","SignOption","CustomButton","styles","Formik","yup","validation","object","fullName","string","required","matches","min","email","password","Stack","SignIn","navigation","ForgetPasswordPress","navigate","container","viewimg","require","sign","values","actions","resetForm","console","log","handleChange","handleSubmit","errors","isValid","handleBlur","containerSign","title","input","errText","justifyContent","alignItems","text","color"],"sources":["C:/Users/Safwen/Desktop/shopiha/components/signIn.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    View , Button, Image,StyleSheet,\r\n    TextInput , Text,\r\n    TouchableOpacity\r\n} from \"react-native\"\r\nimport { navigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport SignOption from \"./customComponent/SignOption\";\r\nimport CustomButton from \"./customComponent/customButton\";\r\nimport styles from \"../styles/global\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nconst validation = yup.object({\r\n    fullName:yup.string()\r\n    .required(\"Enter your name\")\r\n    .matches(/(\\w.+\\s).+/, 'Enter at least 2 names')\r\n    .min(3),\r\n    email:yup\r\n    .string()\r\n    .email(\"Please enter valid email\")\r\n    .required(\"Email address is required\"),\r\n    password:yup\r\n    .string()\r\n    .min(8)\r\n    .required(\"Password is required\"),\r\n   \r\n})\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst SignIn=({navigation}) =>{\r\n\r\nconst ForgetPasswordPress= ()=> {\r\n        navigation.navigate('ForgePasswordScreen')}\r\n    return (\r\n\r\n    \r\n        <View style={styles.container} > \r\n          <View style={styles.viewimg} > \r\n              <Image source={require('../assets/sign.png')} style={styles.sign}  />      \r\n             </View>\r\n            <Formik\r\n            initialValues={{fullName:'', email :'' , password:''} }\r\n            validationSchema={validation}\r\n            onSubmit={(values,actions) => {\r\n                actions.resetForm()\r\n                console.log(values)\r\n\r\n\r\n\r\n            }}\r\n            >\r\n                {({handleChange,\r\n     handleSubmit,\r\n     values,\r\n     errors,\r\n     isValid,\r\n     handleBlur\r\n     })=>( \r\n                    <View style={styles.containerSign}>\r\n                       <Text style={styles.title}>Sign in\r\n                         </Text>  \r\n                         <TextInput\r\n                         style={styles.input}\r\n                        placeholder='Full name' \r\n                        placeholderTextColor={'#343a40'}\r\n                        \r\n                        onChangeText={handleChange('fullName')}\r\n                        value={values.fullName}\r\n                        />\r\n                        {errors.fullName &&\r\n                        <Text style={styles.errText}>{errors.fullName}</Text>\r\n       }\r\n\r\n                        <TextInput\r\n                         style={styles.input}\r\n                        placeholder='Email address' \r\n                        placeholderTextColor={'#343a40'}\r\n                        keyboardType=\"email-address\"\r\n                        onChangeText={handleChange('email')}\r\n                        onBlur={handleBlur('email')}\r\n                        value={values.email}\r\n                        />\r\n                        {errors.email &&\r\n                        <Text style={styles.errText}>{errors.email}</Text>\r\n                        }\r\n                        <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Password'\r\n                        secureTextEntry={true} \r\n                        placeholderTextColor={'#343a40'}\r\n                        onChangeText={handleChange('password')}\r\n                        onBlur={handleBlur('password')}\r\n                        value={values.password}\r\n                        />\r\n                        {errors.password &&\r\n                        <Text style={styles.errText}>{errors.password}</Text>\r\n                        }\r\n                        <View style={{justifyContent:'center',alignItems:'center'}}>\r\n                        <Text style={styles.text} onPress={ForgetPasswordPress\r\n                            \r\n                        } >\r\n                       Forget password ?</Text>\r\n                            <CustomButton\r\n                            text={\"Sign Un\"}\r\n                            disabled={!isValid}\r\n                            onPress={\r\n                               ()=> {handleSubmit\r\n                                 navigation.navigate('Home')\r\n                               }\r\n                            }/>\r\n                            </View>    \r\n                        <Text style={styles.text}>Don't have an account <Text style={{color:'red'}} onPress={() => navigation.navigate('SignUp')} > Sign up</Text> </Text>\r\n                        <SignOption/>\r\n                    </View>\r\n                    \r\n                    \r\n                )}\r\n            </Formik>\r\n        </View>\r\n\r\n    )\r\n\r\n} \r\nexport default SignIn;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAMA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,IAAMC,UAAU,GAAGD,GAAG,CAACE,MAAJ,CAAW;EAC1BC,QAAQ,EAACH,GAAG,CAACI,MAAJ,GACRC,QADQ,CACC,iBADD,EAERC,OAFQ,CAEA,YAFA,EAEc,wBAFd,EAGRC,GAHQ,CAGJ,CAHI,CADiB;EAK1BC,KAAK,EAACR,GAAG,CACRI,MADK,GAELI,KAFK,CAEC,0BAFD,EAGLH,QAHK,CAGI,2BAHJ,CALoB;EAS1BI,QAAQ,EAACT,GAAG,CACXI,MADQ,GAERG,GAFQ,CAEJ,CAFI,EAGRF,QAHQ,CAGC,sBAHD;AATiB,CAAX,CAAnB;AAgBA,IAAMK,KAAK,GAAGf,0BAA0B,EAAxC;;AAEA,IAAMgB,MAAM,GAAC,SAAPA,MAAO,OAAiB;EAAA,IAAfC,UAAe,QAAfA,UAAe;;EAE9B,IAAMC,mBAAmB,GAAE,SAArBA,mBAAqB,GAAK;IACxBD,UAAU,CAACE,QAAX,CAAoB,qBAApB;EAA2C,CADnD;;EAEI,OAGI,MAAC,IAAD;IAAM,KAAK,EAAEhB,MAAM,CAACiB,SAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEjB,MAAM,CAACkB,OAApB;MAAA,UACI,KAAC,KAAD;QAAO,MAAM,EAAEC,OAAO,sBAAtB;QAA8C,KAAK,EAAEnB,MAAM,CAACoB;MAA5D;IADJ,EADF,EAII,KAAC,MAAD;MACA,aAAa,EAAE;QAACf,QAAQ,EAAC,EAAV;QAAcK,KAAK,EAAE,EAArB;QAA0BC,QAAQ,EAAC;MAAnC,CADf;MAEA,gBAAgB,EAAER,UAFlB;MAGA,QAAQ,EAAE,kBAACkB,MAAD,EAAQC,OAAR,EAAoB;QAC1BA,OAAO,CAACC,SAAR;QACAC,OAAO,CAACC,GAAR,CAAYJ,MAAZ;MAIH,CATD;MAAA,UAWK;QAAA,IAAEK,YAAF,SAAEA,YAAF;QAAA,IACZC,YADY,SACZA,YADY;QAAA,IAEZN,MAFY,SAEZA,MAFY;QAAA,IAGZO,MAHY,SAGZA,MAHY;QAAA,IAIZC,OAJY,SAIZA,OAJY;QAAA,IAKZC,UALY,SAKZA,UALY;QAAA,OAOG,MAAC,IAAD;UAAM,KAAK,EAAE9B,MAAM,CAAC+B,aAApB;UAAA,WACG,KAAC,IAAD;YAAM,KAAK,EAAE/B,MAAM,CAACgC,KAApB;YAAA;UAAA,EADH,EAGK,KAAC,SAAD;YACA,KAAK,EAAEhC,MAAM,CAACiC,KADd;YAED,WAAW,EAAC,WAFX;YAGD,oBAAoB,EAAE,SAHrB;YAKD,YAAY,EAAEP,YAAY,CAAC,UAAD,CALzB;YAMD,KAAK,EAAEL,MAAM,CAAChB;UANb,EAHL,EAWKuB,MAAM,CAACvB,QAAP,IACD,KAAC,IAAD;YAAM,KAAK,EAAEL,MAAM,CAACkC,OAApB;YAAA,UAA8BN,MAAM,CAACvB;UAArC,EAZJ,EAeI,KAAC,SAAD;YACC,KAAK,EAAEL,MAAM,CAACiC,KADf;YAEA,WAAW,EAAC,eAFZ;YAGA,oBAAoB,EAAE,SAHtB;YAIA,YAAY,EAAC,eAJb;YAKA,YAAY,EAAEP,YAAY,CAAC,OAAD,CAL1B;YAMA,MAAM,EAAEI,UAAU,CAAC,OAAD,CANlB;YAOA,KAAK,EAAET,MAAM,CAACX;UAPd,EAfJ,EAwBKkB,MAAM,CAAClB,KAAP,IACD,KAAC,IAAD;YAAM,KAAK,EAAEV,MAAM,CAACkC,OAApB;YAAA,UAA8BN,MAAM,CAAClB;UAArC,EAzBJ,EA2BI,KAAC,SAAD;YACA,KAAK,EAAEV,MAAM,CAACiC,KADd;YAEA,WAAW,EAAC,UAFZ;YAGA,eAAe,EAAE,IAHjB;YAIA,oBAAoB,EAAE,SAJtB;YAKA,YAAY,EAAEP,YAAY,CAAC,UAAD,CAL1B;YAMA,MAAM,EAAEI,UAAU,CAAC,UAAD,CANlB;YAOA,KAAK,EAAET,MAAM,CAACV;UAPd,EA3BJ,EAoCKiB,MAAM,CAACjB,QAAP,IACD,KAAC,IAAD;YAAM,KAAK,EAAEX,MAAM,CAACkC,OAApB;YAAA,UAA8BN,MAAM,CAACjB;UAArC,EArCJ,EAuCI,MAAC,IAAD;YAAM,KAAK,EAAE;cAACwB,cAAc,EAAC,QAAhB;cAAyBC,UAAU,EAAC;YAApC,CAAb;YAAA,WACA,KAAC,IAAD;cAAM,KAAK,EAAEpC,MAAM,CAACqC,IAApB;cAA0B,OAAO,EAAEtB,mBAAnC;cAAA;YAAA,EADA,EAKI,KAAC,YAAD;cACA,IAAI,EAAE,SADN;cAEA,QAAQ,EAAE,CAACc,OAFX;cAGA,OAAO,EACJ,mBAAK;gBAACF,YAAY;gBAChBb,UAAU,CAACE,QAAX,CAAoB,MAApB;cACD;YANJ,EALJ;UAAA,EAvCJ,EAqDI,MAAC,IAAD;YAAM,KAAK,EAAEhB,MAAM,CAACqC,IAApB;YAAA,qCAAgD,KAAC,IAAD;cAAM,KAAK,EAAE;gBAACC,KAAK,EAAC;cAAP,CAAb;cAA4B,OAAO,EAAE;gBAAA,OAAMxB,UAAU,CAACE,QAAX,CAAoB,QAApB,CAAN;cAAA,CAArC;cAAA;YAAA,EAAhD;UAAA,EArDJ,EAsDI,KAAC,UAAD,KAtDJ;QAAA,EAPH;MAAA;IAXL,EAJJ;EAAA,EAHJ;AAyFH,CA7FD;;AA8FA,eAAeH,MAAf"},"metadata":{},"sourceType":"module"}