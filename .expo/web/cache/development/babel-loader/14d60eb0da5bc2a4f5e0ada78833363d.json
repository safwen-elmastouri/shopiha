{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { navigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SignOption from \"./customComponent/SignOption\";\nimport styles from \"../styles/global\";\nimport { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport CustomButton from \"./customComponent/customButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validation = yup.object({\n  fullName: yup.string().required(\"Enter your name\").matches(/(\\w.+\\s).+/, 'Enter at least 2 names').min(3),\n  email: yup.string().email(\"Please enter valid email\").required(\"Email address is required\"),\n  password: yup.string().min(8).required(\"Password is required\"),\n  confirmPassword: yup.string().oneOf([yup.ref('password')], 'Passwords do not match').required('Confirm password is required')\n});\nvar Stack = createNativeStackNavigator();\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {}), _jsx(View, {\n      style: styles.viewimg,\n      children: _jsx(Image, {\n        source: require(\"../assets/sign.png\"),\n        style: styles.sign\n      })\n    }), _jsx(Formik, {\n      initialValues: {\n        fullName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: validation,\n      onSubmit: function onSubmit(values, actions) {\n        actions.resetForm();\n        console.log(values);\n      },\n      children: function children(_ref2) {\n        var handleChange = _ref2.handleChange,\n          handleSubmit = _ref2.handleSubmit,\n          values = _ref2.values,\n          errors = _ref2.errors,\n          isValid = _ref2.isValid;\n        return _jsxs(View, {\n          style: styles.containerSign,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"Register\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Full name\",\n            placeholderTextColor: '#343a40',\n            onChangeText: handleChange('fullName'),\n            value: values.fullName\n          }), errors.fullName && _jsx(Text, {\n            style: styles.errText,\n            children: errors.fullName\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Email address\",\n            placeholderTextColor: '#343a40',\n            keyboardType: \"email-address\",\n            onChangeText: handleChange('email'),\n            value: values.email\n          }), errors.email && _jsx(Text, {\n            style: styles.errText,\n            children: errors.email\n          }), _jsx(TextInput, {\n            style: styles.input,\n            secureTextEntry: true,\n            placeholder: \"Password\",\n            placeholderTextColor: '#343a40',\n            onChangeText: handleChange('password'),\n            value: values.password\n          }), errors.password && _jsx(Text, {\n            style: styles.errText,\n            children: errors.password\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Confirm your password\",\n            placeholderTextColor: '#343a40',\n            secureTextEntry: true,\n            onChangeText: handleChange('confirmPassword'),\n            value: values.confirmPassword\n          }), errors.confirmPassword && _jsx(Text, {\n            style: styles.errText,\n            children: errors.confirmPassword\n          }), _jsx(View, {\n            style: {\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: _jsx(CustomButton, {\n              text: \"Sign Up\",\n              disabled: !isValid,\n              onPress: function onPress() {\n                handleSubmit;\n                navigation.navigate('Home');\n              }\n            })\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Already have an account \", _jsx(Text, {\n              onPress: function onPress() {\n                navigation.navigate('SignIn');\n              },\n              style: {\n                color: 'red'\n              },\n              children: \"Sign in \"\n            }), \" \"]\n          }), _jsx(SignOption, {})]\n        });\n      }\n    })]\n  });\n};\nexport default SignUp;","map":{"version":3,"names":["React","navigationContainer","createNativeStackNavigator","SignOption","styles","Formik","yup","CustomButton","validation","object","fullName","string","required","matches","min","email","password","confirmPassword","oneOf","ref","Stack","SignUp","navigation","container","viewimg","require","sign","values","actions","resetForm","console","log","handleChange","handleSubmit","errors","isValid","containerSign","title","input","errText","justifyContent","alignItems","navigate","text","color"],"sources":["C:/Users/Safwen/Desktop/shopiha/components/signUp.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    View ,Button, TextInput,Text,\r\n    TouchableOpacity,Image \r\n} from \"react-native\"\r\n\r\nimport { navigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport SignOption from \"./customComponent/SignOption\";\r\nimport styles from \"../styles/global\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport CustomButton from \"./customComponent/customButton\";\r\n\r\nconst validation = yup.object({\r\n    fullName:yup.string()\r\n    .required(\"Enter your name\")\r\n    .matches(/(\\w.+\\s).+/, 'Enter at least 2 names')\r\n    .min(3),\r\n    email:yup\r\n    .string()\r\n    .email(\"Please enter valid email\")\r\n    .required(\"Email address is required\"),\r\n    password:yup\r\n    .string()\r\n    .min(8)\r\n    .required(\"Password is required\"),\r\n    confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password')], 'Passwords do not match')\r\n    .required('Confirm password is required'),\r\n})\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst SignUp=({navigation}) =>{\r\n\r\n    return (\r\n        <View style={styles.container} > \r\n            <View>\r\n   \r\n            </View>\r\n             <View style={styles.viewimg} > \r\n              <Image source={require('../assets/sign.png')} style={styles.sign}  />      \r\n             </View>\r\n            <Formik\r\n            initialValues={{fullName:'',email :'' , password:'',confirmPassword:''} }\r\n            validationSchema={validation}\r\n            onSubmit={(values,actions) => {\r\n                actions.resetForm()\r\n                console.log(values)\r\n\r\n\r\n\r\n            }}\r\n            >\r\n                {({handleChange,\r\n     handleSubmit,\r\n     values,\r\n     errors,\r\n     isValid,\r\n     \r\n     })=>( \r\n                    <View style={styles.containerSign}>\r\n                        \r\n                       <Text style={styles.title}>Register\r\n                         </Text>  \r\n                         <TextInput\r\n                         style={styles.input}\r\n                        placeholder='Full name' \r\n                        placeholderTextColor={'#343a40'}\r\n                        \r\n                        onChangeText={handleChange('fullName')}\r\n                        value={values.fullName}\r\n                        />\r\n                        {errors.fullName &&\r\n                        <Text style={styles.errText}>{errors.fullName}</Text>\r\n       }\r\n                        <TextInput\r\n                         style={styles.input}\r\n                        placeholder='Email address' \r\n                        placeholderTextColor={'#343a40'}\r\n                        keyboardType=\"email-address\"\r\n                        onChangeText={handleChange('email')}\r\n                        value={values.email}\r\n                        />\r\n                        {errors.email &&\r\n                        <Text style={styles.errText}>{errors.email}</Text>\r\n                        }\r\n                        <TextInput \r\n                        style={styles.input}\r\n                        secureTextEntry={true}\r\n                        placeholder='Password' \r\n                        placeholderTextColor={'#343a40'}\r\n                        onChangeText={handleChange('password')}\r\n                        value={values.password}\r\n                        />\r\n                        {errors.password &&\r\n                        <Text style={styles.errText}>{errors.password}</Text>\r\n                        }\r\n                        <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Confirm your password' \r\n                        placeholderTextColor={'#343a40'}\r\n                        secureTextEntry={true}\r\n                        onChangeText={handleChange('confirmPassword')}\r\n                        value={values.confirmPassword}\r\n                        />\r\n                        {errors.confirmPassword &&\r\n                        <Text style={styles.errText}>{errors.confirmPassword}</Text>\r\n                        }\r\n                        <View style={{ justifyContent:'center', alignItems:'center'}}>\r\n                        <CustomButton  text={\"Sign Up\"}\r\n                        disabled={!isValid}\r\n                        onPress={\r\n                           ()=> {handleSubmit\r\n                             navigation.navigate('Home')\r\n\r\n                        }} />\r\n                        </View>\r\n                        <Text style={styles.text}>Already have an account <Text onPress={()=>{ navigation.navigate('SignIn')}} style={{color:'red'}} >Sign in </Text> </Text>\r\n                        <SignOption/>\r\n                    </View>\r\n                    \r\n                    \r\n                )}\r\n            </Formik>\r\n        </View>\r\n\r\n    )\r\n\r\n} \r\nexport default SignUp;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}